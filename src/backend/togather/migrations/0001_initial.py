# Generated by Django 4.2 on 2023-04-17 19:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('tags', models.JSONField()),
                ('description', models.CharField(blank=True, max_length=2000)),
                ('price', models.PositiveIntegerField(default=0)),
                ('access_type', models.PositiveSmallIntegerField(choices=[(1, 'OPEN'), (2, 'WHITELIST'), (3, 'PREMIUM'), (4, 'FRIENDS'), (5, 'INVITE ONLY')])),
                ('max_participants', models.PositiveIntegerField(blank=True)),
                ('geo_lat', models.IntegerField()),
                ('geo_long', models.IntegerField()),
                ('address', models.CharField(max_length=150)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('is_archived', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TogatherUser',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('bio', models.TextField()),
                ('other_sites', models.JSONField()),
                ('creator_score', models.PositiveSmallIntegerField()),
                ('participant_score', models.PositiveSmallIntegerField()),
                ('friends', models.ManyToManyField(to='togather.togatheruser')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='togather_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='')),
                ('order', models.PositiveSmallIntegerField(unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='togather.togatheruser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='')),
                ('order', models.PositiveSmallIntegerField(unique=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='togather.event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='creator',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_events', to='togather.togatheruser'),
        ),
        migrations.AddField(
            model_name='event',
            name='interested',
            field=models.ManyToManyField(blank=True, related_name='interested_events', to='togather.togatheruser'),
        ),
        migrations.AddField(
            model_name='event',
            name='moderators',
            field=models.ManyToManyField(blank=True, related_name='moderated_events', to='togather.togatheruser'),
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(blank=True, related_name='participating_events', to='togather.togatheruser'),
        ),
        migrations.AddField(
            model_name='event',
            name='participation_requests',
            field=models.ManyToManyField(blank=True, related_name='requested_events', to='togather.togatheruser'),
        ),
    ]
